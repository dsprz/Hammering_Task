---
# If true, the FSM transitions are managed by an external tool
Managed: false
# If true and the FSM is self-managed, transitions should be triggered
StepByStep: true
# Change idle behaviour, if true the state is kept until transition,
# otherwise the FSM holds the last state until transition
IdleKeepState: false
# Where to look for state libraries
StatesLibraries:
- "@MC_STATES_DEFAULT_RUNTIME_INSTALL_PREFIX@"
- "@MC_STATES_RUNTIME_INSTALL_PREFIX@"
# Where to look for state files
StatesFiles:
- "@MC_STATES_DEFAULT_RUNTIME_INSTALL_PREFIX@/data"
- "@MC_STATES_RUNTIME_INSTALL_PREFIX@/data"
# If true, state factory will be more verbose
VerboseStateFactory: false
# Additional robots to load
robots:
  ground:
    module: env/ground
  nail:
    module: object/nail
    init_pos:
      translation: [0.55, 0.30 , 0.9]
      rotation: [0.0, 0.0, 1.57]
    
# General constraints, always on
constraints:
- type: contact
- type: dynamics
  damper: [0.1, 0.01, 0.5]
- type: compoundJoint

# Collision constraint
collisions:
- type: collision
  useMinimal: true
- type: collision
  r1: hrp5_p
  r2: nail
  collisions:
    body1: hammer
    body2: nail

contacts:
- r2: ground
  r1Surface: LeftFoot
  r2Surface: AllGround
- r2: ground
  r1Surface: RightFoot
  r2Surface: AllGround

states:
  CoM:
    base: MetaTasks
    tasks:
      CoM:
        type: com
        com: [0.0, 0.0, 1.00]
        weight: 3000
        stiffness: 100  
        
  PostureTask:
    base: MetaTasks
    tasks:
      type: posture
      stiffness: 1.0
      weight: 1000

  Hammer::Standing:
    base: MetaTasks
    tasks:
      Stabilizer:
        type: lipm_stabilizer
        enabled: true
        contacts: [Left, Right]
        leftFootSurface: LeftFootCenter
        rightFootSurface: RightFootCenter
        torsoBodyName: Chest_Link2

        dcm_tracking:
          gains:
            prop: [0,0]
            integral: [0,0]
            deriv: [0., 0.]
            comdError: 0.
        admittance:
          copFzLambda: [30,30,30]
          copFzDelay: 0.0
          df: [0.0, 0.0, 0.0001]
          cop: [0.01, 0.01]
          maxVel:
            angular: [3., 3., 3.]
            linear: [1., 1., 1.]
        tasks:
          contact:
            constrainCoP: false
            damping: 150.0
          com:
            stiffness: [100.,100.,100.]
            dimWeight: [1 , 1 , 1]
            weight: 5000.
            height: 0.92
    
  Initial_And_Standing: 
    base: Parallel
    states: [Hammer::Standing, Hammering_FSM_Controller_Initial]

  Get_In_Position_And_Standing: 
    base: Parallel
    states: [Hammer::Standing, Get_In_Position_Task]

  Hammer::HammeringFSM_Finish: 
    base: Parallel
    states: [Hammer::Standing, HammeringFSM_Finish]
  
  Hammer::HammeringFSM:
    base: Meta 
    transitions:
      - [Initial_And_Standing, BUTTON_CLICKED, Get_In_Position_And_Standing, Auto]
      - [Get_In_Position_And_Standing, Stop, Initial_And_Standing, Auto]
      # - [Hammer::HammeringFSM_Hammering, Stop , Hammer::HammeringFSM_Finish, Auto]
      # - [Hammer::HammeringFSM_Finish, Auto , Hammer::HammeringFSM_Initial, Auto]
      # - [Hammer::HammeringFSM_Finish, Start , Hammer::HammeringFSM_Hammering, Auto]

# Transitions map
transitions:
- [Hammer::HammeringFSM, OK, Hammer::HammeringFSM, Strict]

# Initial state
init: Hammer::HammeringFSM

hrp5_p:
  posture:
    stiffness: 5
    weight: 1

ObserverPipelines:
  name: "ObserverPipeline"
  gui: true
  observers:
    - type: Encoder
      config:
        velocity: encoderVelocities
    - type: Attitude
      update: true
    - type: KinematicInertial
      update: true
      config:
        anchorFrame:
          maxAnchorFrameDiscontinuity: 0.05 # [m]
    - type: BodySensor
      update: true
      config:  
        bodySensor: FloatingBase
